name: Tag Release

permissions:
  contents: write

on:
  push:
    branches:
      - 'main'

jobs:
  bump_version:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    name: "Bump version"
    outputs:
      version: ${{ steps.tag.outputs.version }}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install commitizen
        run: pip install --user -U commitizen
      - id: tag
        name: Create tag
        run: |
          VERSION=$(cz bump --get-next)
          git tag "v${VERSION}"
          git push origin "v${VERSION}" --tags
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          cz changelog "v${VERSION}" --file-name /tmp/changelog.md
      - name: Upload changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: /tmp/changelog.md
  release:
    needs: bump_version
    runs-on: ubuntu-latest
    name: "Release"
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          ref: "v${{ needs.bump_version.outputs.version }}"
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
      - name: Sign
        env:
          SIGNING_KEY: "${{ secrets.GPG_KEY_ASCII }}"
          SIGNING_PASSWORD: "${{ secrets.GPG_KEY_PASSPHRASE }}"
          SIGNING_KEY_ID: "${{ vars.GPG_KEY_NAME }}"
          OSSRH_USERNAME: "${{ secrets.OSSRH_USERNAME }}"
          OSSRH_PASSWORD: "${{ secrets.OSSRH_PASSWORD }}"
          RELEASE_VERSION: "v${{ needs.bump_version.outputs.version }}"
        run: |
          ./gradlew printVersion # sign uploadArchives
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: ${{ github.workspace }}-CHANGELOG
      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "v${{ needs.bump_version.outputs.version }}"
          release_name: "Release v${{ needs.bump_version.outputs.version }}"
          body_path: ${{ github.workspace }}-CHANGELOG/changelog.md
          draft: false
          prerelease: false
