/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven'
    id 'signing'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

//project.artifacts {
  //archives project.javadocJar, project.sourcesJar
//}


// Configure artifact publication
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
        authentication(
            userName: project.hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME'),
            password: project.hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')
            )
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
        authentication(
            userName: project.hasProperty('ossrhUsername') ? ossrhUsername : System.getenv('OSSRH_USERNAME'),
            password: project.hasProperty('ossrhPassword') ? ossrhPassword : System.getenv('OSSRH_PASSWORD')
            )
      }

      pom.project {
        name 'DTP'
          packaging 'jar'
          description 'The Data Transfer Project'
          url 'https://datatransferproject.dev/'

          scm {
            url 'https://github.com/google/data-transfer-project'
              developerConnection 'scm:git:ssh://git@github.com:google/data-transfer-project.git'
              connection 'scm:git:git://github.com/google/data-transfer-project.git'
          }

        licenses {
          license {
            name 'Apache 2.0'
              url 'https://www.apache.org/licenses/LICENSE-2.0.html'
              distribution 'repo'
          }
        }

        developers {
          developer {
            id 'dtp'
              name 'Data Transfer Project'
              email "portability-maintainers@googlegroups.com"
          }
        }
      }
    }
  }
}

signing {
  def signingKey = System.getenv('SIGNING_KEY')
  def signingPassword = findProperty("SIGNING_PASSWORD")
  useInMemoryPgpKeys(signingKey, signingPassword)
  sign project.configurations.archives
}
